/*
 * Copyright 2021 Artem Godin.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Dependency-Track API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.fluorumlabs.dtrack.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.fluorumlabs.dtrack.model.Component;
import com.github.fluorumlabs.dtrack.model.Vulnerability;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * FindingAttribution
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-21T09:42:21.596Z")
public class FindingAttribution {
  @SerializedName("attributedOn")
  private Double attributedOn = null;

  /**
   * Gets or Sets analyzerIdentity
   */
  @JsonAdapter(AnalyzerIdentityEnum.Adapter.class)
  public enum AnalyzerIdentityEnum {
    INTERNAL_ANALYZER("INTERNAL_ANALYZER"),
    
    OSSINDEX_ANALYZER("OSSINDEX_ANALYZER"),
    
    NPM_AUDIT_ANALYZER("NPM_AUDIT_ANALYZER"),
    
    VULNDB_ANALYZER("VULNDB_ANALYZER"),
    
    NONE("NONE");

    private String value;

    AnalyzerIdentityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AnalyzerIdentityEnum fromValue(String text) {
      for (AnalyzerIdentityEnum b : AnalyzerIdentityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<AnalyzerIdentityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AnalyzerIdentityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AnalyzerIdentityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AnalyzerIdentityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("analyzerIdentity")
  private AnalyzerIdentityEnum analyzerIdentity = null;

  @SerializedName("component")
  private Component component = null;

  @SerializedName("vulnerability")
  private Vulnerability vulnerability = null;

  @SerializedName("alternateIdentifier")
  private String alternateIdentifier = null;

  @SerializedName("referenceUrl")
  private String referenceUrl = null;

  @SerializedName("uuid")
  private UUID uuid = null;

  public FindingAttribution attributedOn(Double attributedOn) {
    this.attributedOn = attributedOn;
    return this;
  }

   /**
   * Get attributedOn
   * @return attributedOn
  **/
  @ApiModelProperty(required = true, value = "")
  public Double getAttributedOn() {
    return attributedOn;
  }

  public void setAttributedOn(Double attributedOn) {
    this.attributedOn = attributedOn;
  }

  public FindingAttribution analyzerIdentity(AnalyzerIdentityEnum analyzerIdentity) {
    this.analyzerIdentity = analyzerIdentity;
    return this;
  }

   /**
   * Get analyzerIdentity
   * @return analyzerIdentity
  **/
  @ApiModelProperty(value = "")
  public AnalyzerIdentityEnum getAnalyzerIdentity() {
    return analyzerIdentity;
  }

  public void setAnalyzerIdentity(AnalyzerIdentityEnum analyzerIdentity) {
    this.analyzerIdentity = analyzerIdentity;
  }

  public FindingAttribution component(Component component) {
    this.component = component;
    return this;
  }

   /**
   * Get component
   * @return component
  **/
  @ApiModelProperty(required = true, value = "")
  public Component getComponent() {
    return component;
  }

  public void setComponent(Component component) {
    this.component = component;
  }

  public FindingAttribution vulnerability(Vulnerability vulnerability) {
    this.vulnerability = vulnerability;
    return this;
  }

   /**
   * Get vulnerability
   * @return vulnerability
  **/
  @ApiModelProperty(required = true, value = "")
  public Vulnerability getVulnerability() {
    return vulnerability;
  }

  public void setVulnerability(Vulnerability vulnerability) {
    this.vulnerability = vulnerability;
  }

  public FindingAttribution alternateIdentifier(String alternateIdentifier) {
    this.alternateIdentifier = alternateIdentifier;
    return this;
  }

   /**
   * Get alternateIdentifier
   * @return alternateIdentifier
  **/
  @ApiModelProperty(value = "")
  public String getAlternateIdentifier() {
    return alternateIdentifier;
  }

  public void setAlternateIdentifier(String alternateIdentifier) {
    this.alternateIdentifier = alternateIdentifier;
  }

  public FindingAttribution referenceUrl(String referenceUrl) {
    this.referenceUrl = referenceUrl;
    return this;
  }

   /**
   * Get referenceUrl
   * @return referenceUrl
  **/
  @ApiModelProperty(value = "")
  public String getReferenceUrl() {
    return referenceUrl;
  }

  public void setReferenceUrl(String referenceUrl) {
    this.referenceUrl = referenceUrl;
  }

  public FindingAttribution uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(required = true, value = "")
  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FindingAttribution findingAttribution = (FindingAttribution) o;
    return Objects.equals(this.attributedOn, findingAttribution.attributedOn) &&
        Objects.equals(this.analyzerIdentity, findingAttribution.analyzerIdentity) &&
        Objects.equals(this.component, findingAttribution.component) &&
        Objects.equals(this.vulnerability, findingAttribution.vulnerability) &&
        Objects.equals(this.alternateIdentifier, findingAttribution.alternateIdentifier) &&
        Objects.equals(this.referenceUrl, findingAttribution.referenceUrl) &&
        Objects.equals(this.uuid, findingAttribution.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributedOn, analyzerIdentity, component, vulnerability, alternateIdentifier, referenceUrl, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FindingAttribution {\n");
    
    sb.append("    attributedOn: ").append(toIndentedString(attributedOn)).append("\n");
    sb.append("    analyzerIdentity: ").append(toIndentedString(analyzerIdentity)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    vulnerability: ").append(toIndentedString(vulnerability)).append("\n");
    sb.append("    alternateIdentifier: ").append(toIndentedString(alternateIdentifier)).append("\n");
    sb.append("    referenceUrl: ").append(toIndentedString(referenceUrl)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

