/*
 * OWASP Dependency-Track
 * REST API of OWASP Dependency-Track
 *
 * OpenAPI spec version: 4.12.6
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.fluorumlabs.dtrack.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.fluorumlabs.dtrack.model.LicenseGroup;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * License
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-11T11:08:28.654737800+01:00[Europe/Berlin]")

public class License {
  @SerializedName("licenseGroups")
  private List<LicenseGroup> licenseGroups = null;

  @SerializedName("uuid")
  private UUID uuid = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("licenseText")
  private String licenseText = null;

  @SerializedName("standardLicenseTemplate")
  private String standardLicenseTemplate = null;

  @SerializedName("standardLicenseHeader")
  private String standardLicenseHeader = null;

  @SerializedName("licenseComments")
  private String licenseComments = null;

  @SerializedName("licenseId")
  private String licenseId = null;

  @SerializedName("isOsiApproved")
  private Boolean isOsiApproved = null;

  @SerializedName("isFsfLibre")
  private Boolean isFsfLibre = null;

  @SerializedName("isDeprecatedLicenseId")
  private Boolean isDeprecatedLicenseId = null;

  @SerializedName("isCustomLicense")
  private Boolean isCustomLicense = null;

  @SerializedName("seeAlso")
  private List<String> seeAlso = null;

  public License licenseGroups(List<LicenseGroup> licenseGroups) {
    this.licenseGroups = licenseGroups;
    return this;
  }

  public License addLicenseGroupsItem(LicenseGroup licenseGroupsItem) {
    if (this.licenseGroups == null) {
      this.licenseGroups = new ArrayList<LicenseGroup>();
    }
    this.licenseGroups.add(licenseGroupsItem);
    return this;
  }

   /**
   * Get licenseGroups
   * @return licenseGroups
  **/
  @Schema(description = "")
  public List<LicenseGroup> getLicenseGroups() {
    return licenseGroups;
  }

  public void setLicenseGroups(List<LicenseGroup> licenseGroups) {
    this.licenseGroups = licenseGroups;
  }

  public License uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(required = true, description = "")
  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }

  public License name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public License licenseText(String licenseText) {
    this.licenseText = licenseText;
    return this;
  }

   /**
   * Get licenseText
   * @return licenseText
  **/
  @Schema(description = "")
  public String getLicenseText() {
    return licenseText;
  }

  public void setLicenseText(String licenseText) {
    this.licenseText = licenseText;
  }

  public License standardLicenseTemplate(String standardLicenseTemplate) {
    this.standardLicenseTemplate = standardLicenseTemplate;
    return this;
  }

   /**
   * Get standardLicenseTemplate
   * @return standardLicenseTemplate
  **/
  @Schema(description = "")
  public String getStandardLicenseTemplate() {
    return standardLicenseTemplate;
  }

  public void setStandardLicenseTemplate(String standardLicenseTemplate) {
    this.standardLicenseTemplate = standardLicenseTemplate;
  }

  public License standardLicenseHeader(String standardLicenseHeader) {
    this.standardLicenseHeader = standardLicenseHeader;
    return this;
  }

   /**
   * Get standardLicenseHeader
   * @return standardLicenseHeader
  **/
  @Schema(description = "")
  public String getStandardLicenseHeader() {
    return standardLicenseHeader;
  }

  public void setStandardLicenseHeader(String standardLicenseHeader) {
    this.standardLicenseHeader = standardLicenseHeader;
  }

  public License licenseComments(String licenseComments) {
    this.licenseComments = licenseComments;
    return this;
  }

   /**
   * Get licenseComments
   * @return licenseComments
  **/
  @Schema(description = "")
  public String getLicenseComments() {
    return licenseComments;
  }

  public void setLicenseComments(String licenseComments) {
    this.licenseComments = licenseComments;
  }

  public License licenseId(String licenseId) {
    this.licenseId = licenseId;
    return this;
  }

   /**
   * Get licenseId
   * @return licenseId
  **/
  @Schema(required = true, description = "")
  public String getLicenseId() {
    return licenseId;
  }

  public void setLicenseId(String licenseId) {
    this.licenseId = licenseId;
  }

  public License isOsiApproved(Boolean isOsiApproved) {
    this.isOsiApproved = isOsiApproved;
    return this;
  }

   /**
   * Get isOsiApproved
   * @return isOsiApproved
  **/
  @Schema(description = "")
  public Boolean isIsOsiApproved() {
    return isOsiApproved;
  }

  public void setIsOsiApproved(Boolean isOsiApproved) {
    this.isOsiApproved = isOsiApproved;
  }

  public License isFsfLibre(Boolean isFsfLibre) {
    this.isFsfLibre = isFsfLibre;
    return this;
  }

   /**
   * Get isFsfLibre
   * @return isFsfLibre
  **/
  @Schema(description = "")
  public Boolean isIsFsfLibre() {
    return isFsfLibre;
  }

  public void setIsFsfLibre(Boolean isFsfLibre) {
    this.isFsfLibre = isFsfLibre;
  }

  public License isDeprecatedLicenseId(Boolean isDeprecatedLicenseId) {
    this.isDeprecatedLicenseId = isDeprecatedLicenseId;
    return this;
  }

   /**
   * Get isDeprecatedLicenseId
   * @return isDeprecatedLicenseId
  **/
  @Schema(description = "")
  public Boolean isIsDeprecatedLicenseId() {
    return isDeprecatedLicenseId;
  }

  public void setIsDeprecatedLicenseId(Boolean isDeprecatedLicenseId) {
    this.isDeprecatedLicenseId = isDeprecatedLicenseId;
  }

  public License isCustomLicense(Boolean isCustomLicense) {
    this.isCustomLicense = isCustomLicense;
    return this;
  }

   /**
   * Get isCustomLicense
   * @return isCustomLicense
  **/
  @Schema(description = "")
  public Boolean isIsCustomLicense() {
    return isCustomLicense;
  }

  public void setIsCustomLicense(Boolean isCustomLicense) {
    this.isCustomLicense = isCustomLicense;
  }

  public License seeAlso(List<String> seeAlso) {
    this.seeAlso = seeAlso;
    return this;
  }

  public License addSeeAlsoItem(String seeAlsoItem) {
    if (this.seeAlso == null) {
      this.seeAlso = new ArrayList<String>();
    }
    this.seeAlso.add(seeAlsoItem);
    return this;
  }

   /**
   * Get seeAlso
   * @return seeAlso
  **/
  @Schema(description = "")
  public List<String> getSeeAlso() {
    return seeAlso;
  }

  public void setSeeAlso(List<String> seeAlso) {
    this.seeAlso = seeAlso;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    License license = (License) o;
    return Objects.equals(this.licenseGroups, license.licenseGroups) &&
        Objects.equals(this.uuid, license.uuid) &&
        Objects.equals(this.name, license.name) &&
        Objects.equals(this.licenseText, license.licenseText) &&
        Objects.equals(this.standardLicenseTemplate, license.standardLicenseTemplate) &&
        Objects.equals(this.standardLicenseHeader, license.standardLicenseHeader) &&
        Objects.equals(this.licenseComments, license.licenseComments) &&
        Objects.equals(this.licenseId, license.licenseId) &&
        Objects.equals(this.isOsiApproved, license.isOsiApproved) &&
        Objects.equals(this.isFsfLibre, license.isFsfLibre) &&
        Objects.equals(this.isDeprecatedLicenseId, license.isDeprecatedLicenseId) &&
        Objects.equals(this.isCustomLicense, license.isCustomLicense) &&
        Objects.equals(this.seeAlso, license.seeAlso);
  }

  @Override
  public int hashCode() {
    return Objects.hash(licenseGroups, uuid, name, licenseText, standardLicenseTemplate, standardLicenseHeader, licenseComments, licenseId, isOsiApproved, isFsfLibre, isDeprecatedLicenseId, isCustomLicense, seeAlso);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class License {\n");
    
    sb.append("    licenseGroups: ").append(toIndentedString(licenseGroups)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    licenseText: ").append(toIndentedString(licenseText)).append("\n");
    sb.append("    standardLicenseTemplate: ").append(toIndentedString(standardLicenseTemplate)).append("\n");
    sb.append("    standardLicenseHeader: ").append(toIndentedString(standardLicenseHeader)).append("\n");
    sb.append("    licenseComments: ").append(toIndentedString(licenseComments)).append("\n");
    sb.append("    licenseId: ").append(toIndentedString(licenseId)).append("\n");
    sb.append("    isOsiApproved: ").append(toIndentedString(isOsiApproved)).append("\n");
    sb.append("    isFsfLibre: ").append(toIndentedString(isFsfLibre)).append("\n");
    sb.append("    isDeprecatedLicenseId: ").append(toIndentedString(isDeprecatedLicenseId)).append("\n");
    sb.append("    isCustomLicense: ").append(toIndentedString(isCustomLicense)).append("\n");
    sb.append("    seeAlso: ").append(toIndentedString(seeAlso)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
