/*
 * Copyright 2021 Artem Godin.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * Dependency-Track API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 4.2.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.github.fluorumlabs.dtrack.model;

import java.util.Objects;
import java.util.Arrays;
import com.github.fluorumlabs.dtrack.model.Component;
import com.github.fluorumlabs.dtrack.model.PolicyCondition;
import com.github.fluorumlabs.dtrack.model.Project;
import com.github.fluorumlabs.dtrack.model.ViolationAnalysis;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;

/**
 * PolicyViolation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-21T09:42:21.596Z")
public class PolicyViolation {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    LICENSE("LICENSE"),
    
    SECURITY("SECURITY"),
    
    OPERATIONAL("OPERATIONAL");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("project")
  private Project project = null;

  @SerializedName("component")
  private Component component = null;

  @SerializedName("policyCondition")
  private PolicyCondition policyCondition = null;

  @SerializedName("timestamp")
  private Double timestamp = null;

  @SerializedName("text")
  private String text = null;

  @SerializedName("analysis")
  private ViolationAnalysis analysis = null;

  @SerializedName("uuid")
  private UUID uuid = null;

  public PolicyViolation type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public PolicyViolation project(Project project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public Project getProject() {
    return project;
  }

  public void setProject(Project project) {
    this.project = project;
  }

  public PolicyViolation component(Component component) {
    this.component = component;
    return this;
  }

   /**
   * Get component
   * @return component
  **/
  @ApiModelProperty(value = "")
  public Component getComponent() {
    return component;
  }

  public void setComponent(Component component) {
    this.component = component;
  }

  public PolicyViolation policyCondition(PolicyCondition policyCondition) {
    this.policyCondition = policyCondition;
    return this;
  }

   /**
   * Get policyCondition
   * @return policyCondition
  **/
  @ApiModelProperty(value = "")
  public PolicyCondition getPolicyCondition() {
    return policyCondition;
  }

  public void setPolicyCondition(PolicyCondition policyCondition) {
    this.policyCondition = policyCondition;
  }

  public PolicyViolation timestamp(Double timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(value = "")
  public Double getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(Double timestamp) {
    this.timestamp = timestamp;
  }

  public PolicyViolation text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public PolicyViolation analysis(ViolationAnalysis analysis) {
    this.analysis = analysis;
    return this;
  }

   /**
   * Get analysis
   * @return analysis
  **/
  @ApiModelProperty(value = "")
  public ViolationAnalysis getAnalysis() {
    return analysis;
  }

  public void setAnalysis(ViolationAnalysis analysis) {
    this.analysis = analysis;
  }

  public PolicyViolation uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(required = true, value = "")
  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PolicyViolation policyViolation = (PolicyViolation) o;
    return Objects.equals(this.type, policyViolation.type) &&
        Objects.equals(this.project, policyViolation.project) &&
        Objects.equals(this.component, policyViolation.component) &&
        Objects.equals(this.policyCondition, policyViolation.policyCondition) &&
        Objects.equals(this.timestamp, policyViolation.timestamp) &&
        Objects.equals(this.text, policyViolation.text) &&
        Objects.equals(this.analysis, policyViolation.analysis) &&
        Objects.equals(this.uuid, policyViolation.uuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, project, component, policyCondition, timestamp, text, analysis, uuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PolicyViolation {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    component: ").append(toIndentedString(component)).append("\n");
    sb.append("    policyCondition: ").append(toIndentedString(policyCondition)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    analysis: ").append(toIndentedString(analysis)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

