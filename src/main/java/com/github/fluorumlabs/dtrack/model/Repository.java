/*
 * OWASP Dependency-Track
 * REST API of OWASP Dependency-Track
 *
 * OpenAPI spec version: 4.12.6
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.github.fluorumlabs.dtrack.model;

import java.io.IOException;
import java.util.Objects;
import java.util.UUID;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Repository
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-03-11T11:08:28.654737800+01:00[Europe/Berlin]")

public class Repository {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    @SerializedName("CPAN")
    CPAN("CPAN"),
    @SerializedName("MAVEN")
    MAVEN("MAVEN"),
    @SerializedName("NPM")
    NPM("NPM"),
    @SerializedName("GEM")
    GEM("GEM"),
    @SerializedName("PYPI")
    PYPI("PYPI"),
    @SerializedName("NUGET")
    NUGET("NUGET"),
    @SerializedName("HEX")
    HEX("HEX"),
    @SerializedName("COMPOSER")
    COMPOSER("COMPOSER"),
    @SerializedName("CARGO")
    CARGO("CARGO"),
    @SerializedName("GO_MODULES")
    GO_MODULES("GO_MODULES"),
    @SerializedName("GITHUB")
    GITHUB("GITHUB"),
    @SerializedName("HACKAGE")
    HACKAGE("HACKAGE"),
    @SerializedName("NIXPKGS")
    NIXPKGS("NIXPKGS"),
    @SerializedName("UNSUPPORTED")
    UNSUPPORTED("UNSUPPORTED");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TypeEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("identifier")
  private String identifier = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("resolutionOrder")
  private Integer resolutionOrder = null;

  @SerializedName("enabled")
  private Boolean enabled = null;

  @SerializedName("internal")
  private Boolean internal = null;

  @SerializedName("authenticationRequired")
  private Boolean authenticationRequired = null;

  @SerializedName("username")
  private String username = null;

  @SerializedName("uuid")
  private UUID uuid = null;

  @SerializedName("password")
  private String password = null;

  public Repository type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(required = true, description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public Repository identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

   /**
   * Get identifier
   * @return identifier
  **/
  @Schema(required = true, description = "")
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }

  public Repository url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(required = true, description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Repository resolutionOrder(Integer resolutionOrder) {
    this.resolutionOrder = resolutionOrder;
    return this;
  }

   /**
   * Get resolutionOrder
   * @return resolutionOrder
  **/
  @Schema(required = true, description = "")
  public Integer getResolutionOrder() {
    return resolutionOrder;
  }

  public void setResolutionOrder(Integer resolutionOrder) {
    this.resolutionOrder = resolutionOrder;
  }

  public Repository enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(required = true, description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public Repository internal(Boolean internal) {
    this.internal = internal;
    return this;
  }

   /**
   * Get internal
   * @return internal
  **/
  @Schema(required = true, description = "")
  public Boolean isInternal() {
    return internal;
  }

  public void setInternal(Boolean internal) {
    this.internal = internal;
  }

  public Repository authenticationRequired(Boolean authenticationRequired) {
    this.authenticationRequired = authenticationRequired;
    return this;
  }

   /**
   * Get authenticationRequired
   * @return authenticationRequired
  **/
  @Schema(description = "")
  public Boolean isAuthenticationRequired() {
    return authenticationRequired;
  }

  public void setAuthenticationRequired(Boolean authenticationRequired) {
    this.authenticationRequired = authenticationRequired;
  }

  public Repository username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @Schema(description = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }

  public Repository uuid(UUID uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @Schema(required = true, description = "")
  public UUID getUuid() {
    return uuid;
  }

  public void setUuid(UUID uuid) {
    this.uuid = uuid;
  }

  public Repository password(String password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @Schema(description = "")
  public String getPassword() {
    return password;
  }

  public void setPassword(String password) {
    this.password = password;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Repository repository = (Repository) o;
    return Objects.equals(this.type, repository.type) &&
        Objects.equals(this.identifier, repository.identifier) &&
        Objects.equals(this.url, repository.url) &&
        Objects.equals(this.resolutionOrder, repository.resolutionOrder) &&
        Objects.equals(this.enabled, repository.enabled) &&
        Objects.equals(this.internal, repository.internal) &&
        Objects.equals(this.authenticationRequired, repository.authenticationRequired) &&
        Objects.equals(this.username, repository.username) &&
        Objects.equals(this.uuid, repository.uuid) &&
        Objects.equals(this.password, repository.password);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, identifier, url, resolutionOrder, enabled, internal, authenticationRequired, username, uuid, password);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Repository {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    resolutionOrder: ").append(toIndentedString(resolutionOrder)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    authenticationRequired: ").append(toIndentedString(authenticationRequired)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
